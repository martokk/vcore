"""init

Revision ID: 88bc8d0168f7
Revises: 
Create Date: 2025-07-19 16:01:57.346031

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = '88bc8d0168f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('env_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('command', 'api_post', 'script', name='jobtype'), nullable=False),
    sa.Column('command', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=False),
    sa.Column('pid', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Enum('highest', 'high', 'normal', 'low', 'lowest', name='priority'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'queued', 'running', 'failed', 'done', 'cancelled', 'error', name='jobstatus'), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('recurrence', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('queue_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_id'), ['id'], unique=False)

    op.create_table('jobscheduler',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('env_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trigger_type', sa.Enum('on_start', 'repeat', name='jobschedulertriggertype'), nullable=False),
    sa.Column('repeat_every_seconds', sa.Integer(), nullable=True),
    sa.Column('job_template', sa.JSON(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('last_run', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jobscheduler', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_jobscheduler_id'), ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('jobscheduler', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_jobscheduler_id'))

    op.drop_table('jobscheduler')
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_id'))

    op.drop_table('job')
    # ### end Alembic commands ###
