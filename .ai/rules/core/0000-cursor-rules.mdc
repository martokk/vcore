---
description: Use ALWAYS when asked to CREATE A RULE or UPDATE A RULE or taught a lesson from the user that should be retained as a new rule for Cursor
globs: .cursor/rules/**/*.mdc,**/*.mdc
alwaysApply: false
---
# Cursor Rules Format

## Template Structure for Rules Files

```mdc
---
description: ACTION when TRIGGER to OUTCOME
globs: .cursor/rules/**/*.mdc
alwaysApply: {true or false}
---

# Rule Title

## Context
- When to apply this rule
- Prerequisites or conditions

## Requirements
- Concise, actionable items
- Each requirement must be testable

## Examples
<example>
Good concise example with explanation
</example>

<example type="invalid">
Invalid concise example with explanation
</example>

## Critical Rules
  - Always do X
  - NEVER do Y
```

## File Organization

### Location

- Path: `/.cursor/rules/[vcore|project]/[category]/[prefix]-[rule-name].mdc`
- Extension: `.mdc`

# Rules Folder Overview

## Categories

### Core Rules and Guidelines

- **Description**: Core rules and guidelines that MUST always be followed. These are system-wide rules applicable to everything.
- **Folder Location**: `/.cursor/rules/[vcore|project]/core/`
- **Prefix**: `00XX`
- **Common Glob Patterns**: `.cursor/rules/[vcore|project]/core/*.mdc`

### LLM & Agents

- **Description**: Guidelines for AI model interactions and prompt engineering. Standards for prompt formats, AI response expectations, and best practices for leveraging AI.
- **Folder Location**: `/.cursor/rules/[vcore|project]/llm_agents/`
- **Prefix**: `01XX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/llm_agents/*.mdc`

### MCP (Model Context Protocol)

- **Description**: Guidelines for implementing Model Context Protocol, an open standard connecting AI models to external data sources.
- **Folder Location**: `/.cursor/rules/[vcore|project]/mcp/`
- **Prefix**: `02XX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/mcp/*.mdc`

### Project

- **Description**: Project-specific rules, guidelines, architecture, PRD, etc. Content specific to this project only.
- **Folder Location**: `/.cursor/rules/project/`
- **Prefix**: `03XX`
- **Common Glob Patterns**: `/.cursor/rules/project/*.mdc`

### Tool Configs

- **Description**: Configuration standards for development tools and utilities. Includes linter settings, editor configurations, and tool integration guidelines.
- **Folder Location**: `/.cursor/rules/[vcore|project]/tools/`
- **Prefix**: `04XX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/tools/*.mdc`

### Docs

- **Description**: Documentation standards and guidelines for maintaining documentation.
- **Folder Location**: `/.cursor/rules/[vcore|project]/docs/`
- **Prefix**: `05XX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/docs/*.mdc`, `docs/**/*.md`

### Workflows

- **Description**: Process standards for development activities including feature implementation, code review, and deployment procedures.
- **Folder Location**: `/.cursor/rules/[vcore|project]/workflows/`
- **Prefix**: `09XX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/workflows/*.mdc`

### Standards

- **Description**: Various standards grouped by domain (testing, API, database, etc.).
- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/`
- **Prefix**: `1XXX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/standards/*.mdc`

#### Testing Standards

- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/testing/`
- **Prefix**: `10XX`
- **Common Glob Patterns**: `tests/**/*.py`

#### API Standards

- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/api/`
- **Prefix**: `11XX`
- **Common Glob Patterns**: `app/routes/api/**/*.py`, `app/routes/views/**/*.py`

#### Database Standards

- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/database/`
- **Prefix**: `12XX`
- **Common Glob Patterns**: `app/models/**/*.py`, `vcore/backend/models/**/*.py`, `migrations/**/*.py`

#### Security Standards

- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/security/`
- **Prefix**: `13XX`
- **Common Glob Patterns**: `app/core/security.py`, `app/api/deps.py`, `vcore/backend/core/security.py`, `vcore/backend/api/deps.py`

#### Performance Standards

- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/performance/`
- **Prefix**: `14XX`
- **Common Glob Patterns**: Various application files

#### UI/UX Standards

- **Folder Location**: `/.cursor/rules/[vcore|project]/standards/ui_ux/`
- **Prefix**: `15XX`
- **Common Glob Patterns**: `frontend/templates/**/*.html`, `frontend/static/**/*`, `vcore/frontend/templates/**/*.html`, `vcore/frontend/static/**/*`

### Language Rules

- **Description**: Language-specific coding conventions and best practices.
- **Folder Location**: `.cursor/rules/[vcore|project]/languages/`
- **Prefix**: `2XXX`
- **Common Glob Patterns**: `.cursor/rules/[vcore|project]/languages/**/*.mdc`

#### Python

- **Folder Location**: `/.cursor/rules/[vcore|project]/languages/python/`
- **Prefix**: `21XX`
- **Common Glob Patterns**: `**/*.py`, `app/**/*.py`, `vcore/backend/**/*.py`

#### JavaScript

- **Folder Location**: `/.cursor/rules/[vcore|project]/languages/javascript/`
- **Prefix**: `22XX`
- **Common Glob Patterns**: `frontend/static/js/**/*.js`, `vcore/frontend/static/js/**/*.js`

#### HTML

- **Folder Location**: `/.cursor/rules/[vcore|project]/languages/html/`
- **Prefix**: `23XX`
- **Common Glob Patterns**: `frontend/templates/**/*.html`

#### CSS & Bootstrap

- **Folder Location**: `/.cursor/rules/[vcore|project]/languages/css/`
- **Prefix**: `24XX`
- **Common Glob Patterns**: `frontend/templates/**/*.html`, `frontend/static/css/**/*.css`, `vcore/frontend/templates/**/*.html`, `vcore/frontend/static/css/**/*.css`

### Framework Rules

- **Description**: Guidelines specific to application frameworks.
- **Folder Location**: `/.cursor/rules/[vcore|project]/frameworks/`
- **Prefix**: `4XXX`
- **Common Glob Patterns**: `/.cursor/rules/[vcore|project]/frameworks/**/*.mdc`

#### vCore

- **Folder Location**: `/.cursor/rules/vcore/frameworks/vcore/`
- **Prefix**: `41XX`
- **Common Glob Patterns**: `**/*.py`, `app/**/*.py`, `vcore/backend/**/*.py`

#### FastAPI Rules

- **Folder Location**: `/.cursor/rules/[vcore|project]/frameworks/fastapi/`
- **Prefix**: `42XX`
- **Common Glob Patterns**: `app/routes/api/**/*.py`, `app/routes/views/**/*.py`

#### SQLModel Rules

- **Folder Location**: `/.cursor/rules/[vcore|project]/frameworks/sqlmodel/`
- **Prefix**: `43XX`
- **Common Glob Patterns**: `app/models/**/*.py`, `app/crud/**/*.py`, `vcore/backend/models/**/*.py`, `vcore/backend/crud/**/*.py`

## Required Fields

### Frontmatter

- description: ACTION TRIGGER OUTCOME format
- globs: `glob pattern for files and folders`
- alwaysApply: {true or false} - when true will be attached to every conversation (but front matter still is important for it to be used!)

<example>
---
description: Use ALWAYS when asked to CREATE A RULE or UPDATE A RULE or taught a lesson from the user that should be retained as a new rule for Cursor
globs: **/*.mdc
alwaysApply: false
---
</example>

### Body

- context: Usage conditions
- requirements: Actionable items
- examples: Both valid and invalid
- critical-rules: summary of short rule bullets that are the most critical to abide by

## Formatting Guidelines

- Use Concise Markdown primarily
- Use some XML tags limited to:
    - `<example>`
    - `<danger>`
    - `<required>`
- Always indent content within XML or nested XML tags by 2 spaces
- Emojies and Mermaid diagrams are allowed if it is not redundant and better explains the rule for the AI comprehension.

## Critical Rules

- Keep frontmatter description under 120 characters (or less) while maintaining clear intent for rule selection by AI Agent
- Keep the rule DRY - do not repeate or be redundant or overly explanetory.
- Use susinct markdown the agent can easily understand.
- the front matter MUST ALWAYS have description, globs, and alwaysApply, even if the value is null
- Use standard glob patterns without quotes (e.g., *.py, app/**/*.py)
- TRY to keep the total rule line count under 50, better under 25, lines (unless there are diagrams or longer required examples, as that will increase the overall line count)
- Always include a valid and invalid example
- Quotes are not needed around glob patterns

# Cursor Rule Authoring Standard

## Frontmatter Requirements

All Cursor rules **must** begin with a YAML frontmatter block containing only the following fields:

- `description`: A concise summary of the rule's purpose and scope.
- `globs`: The file glob(s) this rule applies to (e.g., `tests/**/*.py`).
- `alwaysApply`: Set to `true` if the rule should always be applied, otherwise `false`.

**No additional fields are allowed in the frontmatter.**

### Example Frontmatter

```yaml
---
description: Standard for handling authentication in tests. Explains how to authenticate test clients for both API and view handler (HTML) tests, including correct usage of fixtures and cookie/header setup. Ensures consistent, reliable authentication in all test scenarios.
globs: tests/**/*.py
alwaysApply: false
---
```

## Context

- When modifying or creating Cursor rules
- When reviewing rule compliance

## Requirements

- Always use the minimal frontmatter format as shown above
- Do not add extra fields (e.g., author, status, version, etc.)
- Place the frontmatter at the very top of the file
- Follow with Markdown content for the rule body

## Critical Rules

- Rules with incorrect or extra frontmatter fields will be considered invalid
- Always review this rule before creating or updating any Cursor rule

- Use standard glob patterns without quotes (e.g., *.py, app/**/*.py) and without spaces between globs (e.g., `**/*.md,**/*.py` not `**/*.md, **/*.py`)
- TRY to keep the total rule line count under 50, better under 25, lines (unless there are diagrams or longer required examples, as that will increase the overall line count)
- Always include a valid and invalid example
- Quotes are not needed around glob patterns
